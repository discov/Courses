Funciones agregado sql

SUM
MIN
MAX
AVG

*solo numericos
*select func(col) from tabla

Funciones fecha sql

DATEPART(part[DD,MM,YY],col)
1000 0000
---------------------------------------

*React*

js Object.assign(destino, fuentes)	copia valores de todas las propiedades enumerables de uno o mas objetos
								a un objeto destino, regresa el objeto destino
js array.splice(start,amountDel,items) borra y/o inserta items apartir de un indice
	*muta el arreglo
js array.slice(inicio, fin)	Toma elementos en rango sin incluir fin, regresa nuevo arreglo
	*Copia arreglo
js concat
	
Mutative functions:		push, pop, shift, unshift, sort, reverse, splice, delete!?.

--1.Clases vs 2.Functional components--
1. Defines Components with them having or not props and state
2. Function that takes props as input and returns jsx to be rendered

Create components:
	React:																		React native
class MyComponent extends React.Component{			var MyComponent = React.createClass( {
	//some stuff																render: {
	render( ){																		return //some jsx
		return //some jsx													}
	}																			} );
}																				
Rendering components

ReactdDOM.render(<MyComponent/>, document.getElementById('someContainer') );

Some Functions:
React.isValidElement(object)

----------------------------------------

.NET

Ciclo de paginas
Res. Inicializacion, instanciacion, restauracion y mantenimiento(viewstate),
corre manejadores de eventos, rendereo


			

Stages:
				Request:
					Se valida si es necesario compilar pagina(incia ciclo) o enviar version cacheada
				Start:
					Se establece se setean request, response, ispostback, uiculture
				Initialization:
					Se hacen disponibles los controles en la pagina, se establece su UniqueID,
					se establecen master page y temas segun aplique
					*En este punto aun no se restauran valores de viewstate a los controles
				Load:
					Si se trata de un postback se cargan propiedades de controles se recuperan
					del viewstate y controlstate
				PostbackEventHandling:
					Si se trata de un postback se llaman los eventhandlers, despues el metodo
					Validate de todos los controles validadores es llamado, excepto en el caso
					de eventos que provocan validacion, estos son validados antes de
					ejecutar eventhandler
				Rendering:
					Se salva viewstate antes de renderear, se llama el metodo render de cada control
					proveyendo un textwriter que escribe su output al objeto outputstream de la
					propiedad Response de la pagina
				Unload:
					Es disparado tras finalizar de renderear y enviar la pagina al cliente, y esta est치 lista para ser
					descartada

					
					
Eventos:
				Preinit:
							Revisa isPostBack
							Crea/Recrea objetos din치micos
							Se establece pagina maestra dinamicamente
							Se establecen temas de manera din치mica
						*Aun no se carga viewstate
				Init:
							Corre cuando cada control a sido inicializado
							Se establecen UniqueID's y se aplican skin settings
							Se utiliza para para leer o inicializar propiedades de controles
							Se dispara el evento initi desde el control mas abajo en el arbol
								hasta llegar a la pagina misma
				InitComplete:
							Valores del Viewstate no han sido cargados aun
							
							
							
------------------------------------------------

ES6

Arrow Function:	
	(params) => returnValue
	si solo un parametro omitir parentesis
import/export:
	export keyword before something to make it available for import
	export default to make it the default one
	import someName from './file.js' imports default import from file.js into someName
	import {name} from './file.js' imports object name from file.js (named export)
	import names can also be comma separated ej. import {name1,name2,name3} from 'file.js'

spread:	
	function(...args) expande elementos, funciona en arreglos y objetos.
	sustituto de Object.assign({destino});
let:
	equivalent to var but for few details
	nearest block scope / var scope is nearest function
	not added as property to global window object / var is added
	avoids closure problem in some situations
closure:
	combinacion de una funcion y el ambito lexico en que se declaro, es decir
	tiene acceso a variables locales presentes en su declaracion
	function ambito(x){return function(y){return x+y;};} var sum = ambito(10);
		x var in sum is set o 10, so calling it like sum(n) will return n+10;
	Util como sustituto a un objeto con un solo metodo o para emular metodos privados
Querys:
	document.querySelector();
Events:
	document.getElementby...().onClick = someFunc();

------------------------------------------------

Python

Everything in python is an object
 0>x>1 is valid on python conditionals
 
 https://www.codeproject.com/Tips/638653/Compress-the-viewstate-Information
 
 
 ----------------------------------------------
 
 
 SIP
 
 T1	USA		23	23-sign	
 E1 Europa	32	0-sync 16-sign
 HMP	Host Media Processing
 VoIP Gateway	-	converts telephony traffic into ip for transmission
 
 
 
 -----------------------------------------------
 
 Galateaui
	
	function detectaLlamada(){
		if(temp1.innerText!='Esperando llamada...' && temp0.innerText=='Disponible') {
			var audioLlamada = new Audio('audio_file.mp3');
			console.log('llamada');
			audioLlamada.play();			
		}
	}
	setInterval( detectaLlamada(), 1000)
  
  <p class="agentStateTxt">Di치logo</p>
  
  <p class="timeCall outboundDesign"><!-- react-text: 4642 -->00:<!-- /react-text --><span class="timeCallBold outboundDesign">01:10</span></p>
  
  document.querySelector('p.waitingCallTextInfo').innerText
  document.querySelector('p.timeCall') ? 1 : 0
  
  setInterval(function(){console.log(document.querySelector('p.timeCall').innerText=="00:00" ? 1 : 0)}, 1000)
  
  function checar(){
	var i = 1;
	var clk = document.querySelector('p.timeCall');
	while(i<200){
	  setTimeout(function (){
	    if(clk){
	      console.log(clk.innerText=="00:00:00" ? "talking": "waiting...");
	    }else console.log(':c');
	  },i*100);
	  i++;
	}
  }